// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtobufMessages.proto

#include "ProtobufMessages.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace messages {
      template <typename>
PROTOBUF_CONSTEXPR UserAction_ActionArgumentsEntry_DoNotUse::UserAction_ActionArgumentsEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct UserAction_ActionArgumentsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserAction_ActionArgumentsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserAction_ActionArgumentsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    UserAction_ActionArgumentsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserAction_ActionArgumentsEntry_DoNotUseDefaultTypeInternal _UserAction_ActionArgumentsEntry_DoNotUse_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR TrackerStatus_ExtraEntry_DoNotUse::TrackerStatus_ExtraEntry_DoNotUse(::_pbi::ConstantInitialized) {}
struct TrackerStatus_ExtraEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrackerStatus_ExtraEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrackerStatus_ExtraEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TrackerStatus_ExtraEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrackerStatus_ExtraEntry_DoNotUseDefaultTypeInternal _TrackerStatus_ExtraEntry_DoNotUse_default_instance_;

inline constexpr TrackerAdded::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tracker_serial_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tracker_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tracker_id_{0},
        tracker_role_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TrackerAdded::TrackerAdded(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TrackerAddedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrackerAddedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrackerAddedDefaultTypeInternal() {}
  union {
    TrackerAdded _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrackerAddedDefaultTypeInternal _TrackerAdded_default_instance_;

inline constexpr Position::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tracker_id_{0},
        x_{0},
        y_{0},
        z_{0},
        qx_{0},
        qy_{0},
        qz_{0},
        qw_{0},
        data_source_{static_cast< ::messages::Position_DataSource >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Position::Position(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PositionDefaultTypeInternal() {}
  union {
    Position _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PositionDefaultTypeInternal _Position_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR PingPong::PingPong(::_pbi::ConstantInitialized) {}
struct PingPongDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PingPongDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PingPongDefaultTypeInternal() {}
  union {
    PingPong _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PingPongDefaultTypeInternal _PingPong_default_instance_;

inline constexpr Battery::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tracker_id_{0},
        battery_level_{0},
        is_charging_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Battery::Battery(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct BatteryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BatteryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BatteryDefaultTypeInternal() {}
  union {
    Battery _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BatteryDefaultTypeInternal _Battery_default_instance_;

inline constexpr UserAction::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : action_arguments_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR UserAction::UserAction(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct UserActionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserActionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserActionDefaultTypeInternal() {}
  union {
    UserAction _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserActionDefaultTypeInternal _UserAction_default_instance_;

inline constexpr TrackerStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        extra_{},
        tracker_id_{0},
        status_{static_cast< ::messages::TrackerStatus_Status >(0)},
        confidence_{static_cast< ::messages::TrackerStatus_Confidence >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR TrackerStatus::TrackerStatus(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct TrackerStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TrackerStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TrackerStatusDefaultTypeInternal() {}
  union {
    TrackerStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TrackerStatusDefaultTypeInternal _TrackerStatus_default_instance_;

inline constexpr ProtobufMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : message_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ProtobufMessage::ProtobufMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct ProtobufMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProtobufMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProtobufMessageDefaultTypeInternal() {}
  union {
    ProtobufMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProtobufMessageDefaultTypeInternal _ProtobufMessage_default_instance_;
}  // namespace messages
static ::_pb::Metadata file_level_metadata_ProtobufMessages_2eproto[9];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_ProtobufMessages_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ProtobufMessages_2eproto = nullptr;
const ::uint32_t TableStruct_ProtobufMessages_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::messages::PingPong, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::messages::Position, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::messages::Position, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::messages::Position, _impl_.tracker_id_),
    PROTOBUF_FIELD_OFFSET(::messages::Position, _impl_.x_),
    PROTOBUF_FIELD_OFFSET(::messages::Position, _impl_.y_),
    PROTOBUF_FIELD_OFFSET(::messages::Position, _impl_.z_),
    PROTOBUF_FIELD_OFFSET(::messages::Position, _impl_.qx_),
    PROTOBUF_FIELD_OFFSET(::messages::Position, _impl_.qy_),
    PROTOBUF_FIELD_OFFSET(::messages::Position, _impl_.qz_),
    PROTOBUF_FIELD_OFFSET(::messages::Position, _impl_.qw_),
    PROTOBUF_FIELD_OFFSET(::messages::Position, _impl_.data_source_),
    ~0u,
    0,
    1,
    2,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    3,
    PROTOBUF_FIELD_OFFSET(::messages::UserAction_ActionArgumentsEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::messages::UserAction_ActionArgumentsEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::messages::UserAction_ActionArgumentsEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::messages::UserAction_ActionArgumentsEntry_DoNotUse, value_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::messages::UserAction, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::messages::UserAction, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::messages::UserAction, _impl_.action_arguments_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::messages::TrackerAdded, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::messages::TrackerAdded, _impl_.tracker_id_),
    PROTOBUF_FIELD_OFFSET(::messages::TrackerAdded, _impl_.tracker_serial_),
    PROTOBUF_FIELD_OFFSET(::messages::TrackerAdded, _impl_.tracker_name_),
    PROTOBUF_FIELD_OFFSET(::messages::TrackerAdded, _impl_.tracker_role_),
    PROTOBUF_FIELD_OFFSET(::messages::TrackerStatus_ExtraEntry_DoNotUse, _has_bits_),
    PROTOBUF_FIELD_OFFSET(::messages::TrackerStatus_ExtraEntry_DoNotUse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::messages::TrackerStatus_ExtraEntry_DoNotUse, key_),
    PROTOBUF_FIELD_OFFSET(::messages::TrackerStatus_ExtraEntry_DoNotUse, value_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::messages::TrackerStatus, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::messages::TrackerStatus, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::messages::TrackerStatus, _impl_.tracker_id_),
    PROTOBUF_FIELD_OFFSET(::messages::TrackerStatus, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::messages::TrackerStatus, _impl_.extra_),
    PROTOBUF_FIELD_OFFSET(::messages::TrackerStatus, _impl_.confidence_),
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::messages::Battery, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::messages::Battery, _impl_.tracker_id_),
    PROTOBUF_FIELD_OFFSET(::messages::Battery, _impl_.battery_level_),
    PROTOBUF_FIELD_OFFSET(::messages::Battery, _impl_.is_charging_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::messages::ProtobufMessage, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::messages::ProtobufMessage, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::messages::ProtobufMessage, _impl_.message_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::messages::PingPong)},
        {8, 25, -1, sizeof(::messages::Position)},
        {34, 44, -1, sizeof(::messages::UserAction_ActionArgumentsEntry_DoNotUse)},
        {46, -1, -1, sizeof(::messages::UserAction)},
        {56, -1, -1, sizeof(::messages::TrackerAdded)},
        {68, 78, -1, sizeof(::messages::TrackerStatus_ExtraEntry_DoNotUse)},
        {80, 92, -1, sizeof(::messages::TrackerStatus)},
        {96, -1, -1, sizeof(::messages::Battery)},
        {107, -1, -1, sizeof(::messages::ProtobufMessage)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::messages::_PingPong_default_instance_._instance,
    &::messages::_Position_default_instance_._instance,
    &::messages::_UserAction_ActionArgumentsEntry_DoNotUse_default_instance_._instance,
    &::messages::_UserAction_default_instance_._instance,
    &::messages::_TrackerAdded_default_instance_._instance,
    &::messages::_TrackerStatus_ExtraEntry_DoNotUse_default_instance_._instance,
    &::messages::_TrackerStatus_default_instance_._instance,
    &::messages::_Battery_default_instance_._instance,
    &::messages::_ProtobufMessage_default_instance_._instance,
};
const char descriptor_table_protodef_ProtobufMessages_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\026ProtobufMessages.proto\022\010messages\"\n\n\010Pi"
    "ngPong\"\223\002\n\010Position\022\022\n\ntracker_id\030\001 \001(\005\022"
    "\016\n\001x\030\002 \001(\002H\000\210\001\001\022\016\n\001y\030\003 \001(\002H\001\210\001\001\022\016\n\001z\030\004 \001"
    "(\002H\002\210\001\001\022\n\n\002qx\030\005 \001(\002\022\n\n\002qy\030\006 \001(\002\022\n\n\002qz\030\007 "
    "\001(\002\022\n\n\002qw\030\010 \001(\002\0227\n\013data_source\030\t \001(\0162\035.m"
    "essages.Position.DataSourceH\003\210\001\001\"8\n\nData"
    "Source\022\010\n\004NONE\020\000\022\007\n\003IMU\020\001\022\r\n\tPRECISION\020\002"
    "\022\010\n\004FULL\020\003B\004\n\002_xB\004\n\002_yB\004\n\002_zB\016\n\014_data_so"
    "urce\"\227\001\n\nUserAction\022\014\n\004name\030\001 \001(\t\022C\n\020act"
    "ion_arguments\030\002 \003(\0132).messages.UserActio"
    "n.ActionArgumentsEntry\0326\n\024ActionArgument"
    "sEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"f"
    "\n\014TrackerAdded\022\022\n\ntracker_id\030\001 \001(\005\022\026\n\016tr"
    "acker_serial\030\002 \001(\t\022\024\n\014tracker_name\030\003 \001(\t"
    "\022\024\n\014tracker_role\030\004 \001(\005\"\374\002\n\rTrackerStatus"
    "\022\022\n\ntracker_id\030\001 \001(\005\022.\n\006status\030\002 \001(\0162\036.m"
    "essages.TrackerStatus.Status\0221\n\005extra\030\003 "
    "\003(\0132\".messages.TrackerStatus.ExtraEntry\022"
    ";\n\nconfidence\030\004 \001(\0162\".messages.TrackerSt"
    "atus.ConfidenceH\000\210\001\001\032,\n\nExtraEntry\022\013\n\003ke"
    "y\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"E\n\006Status\022\020\n\014"
    "DISCONNECTED\020\000\022\006\n\002OK\020\001\022\010\n\004BUSY\020\002\022\t\n\005ERRO"
    "R\020\003\022\014\n\010OCCLUDED\020\004\"3\n\nConfidence\022\006\n\002NO\020\000\022"
    "\007\n\003LOW\020\001\022\n\n\006MEDIUM\020\005\022\010\n\004HIGH\020\nB\r\n\013_confi"
    "dence\"I\n\007Battery\022\022\n\ntracker_id\030\001 \001(\005\022\025\n\r"
    "battery_level\030\002 \001(\002\022\023\n\013is_charging\030\003 \001(\010"
    "\"\373\001\n\017ProtobufMessage\022&\n\010position\030\001 \001(\0132\022"
    ".messages.PositionH\000\022+\n\013user_action\030\002 \001("
    "\0132\024.messages.UserActionH\000\022/\n\rtracker_add"
    "ed\030\003 \001(\0132\026.messages.TrackerAddedH\000\0221\n\016tr"
    "acker_status\030\004 \001(\0132\027.messages.TrackerSta"
    "tusH\000\022$\n\007battery\030\005 \001(\0132\021.messages.Batter"
    "yH\000B\t\n\007messageB&\n\022dev.slimevr.bridgeB\020Pr"
    "otobufMessagesb\006proto3"
};
static ::absl::once_flag descriptor_table_ProtobufMessages_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_ProtobufMessages_2eproto = {
    false,
    false,
    1342,
    descriptor_table_protodef_ProtobufMessages_2eproto,
    "ProtobufMessages.proto",
    &descriptor_table_ProtobufMessages_2eproto_once,
    nullptr,
    0,
    9,
    schemas,
    file_default_instances,
    TableStruct_ProtobufMessages_2eproto::offsets,
    file_level_metadata_ProtobufMessages_2eproto,
    file_level_enum_descriptors_ProtobufMessages_2eproto,
    file_level_service_descriptors_ProtobufMessages_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_ProtobufMessages_2eproto_getter() {
  return &descriptor_table_ProtobufMessages_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_ProtobufMessages_2eproto(&descriptor_table_ProtobufMessages_2eproto);
namespace messages {
const ::google::protobuf::EnumDescriptor* Position_DataSource_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ProtobufMessages_2eproto);
  return file_level_enum_descriptors_ProtobufMessages_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Position_DataSource_internal_data_[] = {
    262144u, 0u, };
bool Position_DataSource_IsValid(int value) {
  return 0 <= value && value <= 3;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr Position_DataSource Position::NONE;
constexpr Position_DataSource Position::IMU;
constexpr Position_DataSource Position::PRECISION;
constexpr Position_DataSource Position::FULL;
constexpr Position_DataSource Position::DataSource_MIN;
constexpr Position_DataSource Position::DataSource_MAX;
constexpr int Position::DataSource_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* TrackerStatus_Status_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ProtobufMessages_2eproto);
  return file_level_enum_descriptors_ProtobufMessages_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t TrackerStatus_Status_internal_data_[] = {
    327680u, 0u, };
bool TrackerStatus_Status_IsValid(int value) {
  return 0 <= value && value <= 4;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr TrackerStatus_Status TrackerStatus::DISCONNECTED;
constexpr TrackerStatus_Status TrackerStatus::OK;
constexpr TrackerStatus_Status TrackerStatus::BUSY;
constexpr TrackerStatus_Status TrackerStatus::ERROR;
constexpr TrackerStatus_Status TrackerStatus::OCCLUDED;
constexpr TrackerStatus_Status TrackerStatus::Status_MIN;
constexpr TrackerStatus_Status TrackerStatus::Status_MAX;
constexpr int TrackerStatus::Status_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* TrackerStatus_Confidence_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_ProtobufMessages_2eproto);
  return file_level_enum_descriptors_ProtobufMessages_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t TrackerStatus_Confidence_internal_data_[] = {
    131072u, 32u, 264u, };
bool TrackerStatus_Confidence_IsValid(int value) {
  return 0 <= value && value <= 10 && ((1059u >> value) & 1) != 0;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr TrackerStatus_Confidence TrackerStatus::NO;
constexpr TrackerStatus_Confidence TrackerStatus::LOW;
constexpr TrackerStatus_Confidence TrackerStatus::MEDIUM;
constexpr TrackerStatus_Confidence TrackerStatus::HIGH;
constexpr TrackerStatus_Confidence TrackerStatus::Confidence_MIN;
constexpr TrackerStatus_Confidence TrackerStatus::Confidence_MAX;
constexpr int TrackerStatus::Confidence_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class PingPong::_Internal {
 public:
};

PingPong::PingPong(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:messages.PingPong)
}
PingPong::PingPong(
    ::google::protobuf::Arena* arena,
    const PingPong& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  PingPong* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:messages.PingPong)
}









::google::protobuf::Metadata PingPong::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ProtobufMessages_2eproto_getter, &descriptor_table_ProtobufMessages_2eproto_once,
      file_level_metadata_ProtobufMessages_2eproto[0]);
}
// ===================================================================

class Position::_Internal {
 public:
  using HasBits = decltype(std::declval<Position>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Position, _impl_._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_z(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_data_source(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

Position::Position(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.Position)
}
Position::Position(
    ::google::protobuf::Arena* arena, const Position& from)
    : Position(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Position::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Position::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tracker_id_),
           0,
           offsetof(Impl_, data_source_) -
               offsetof(Impl_, tracker_id_) +
               sizeof(Impl_::data_source_));
}
Position::~Position() {
  // @@protoc_insertion_point(destructor:messages.Position)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Position::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Position::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.Position)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tracker_id_ = 0;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&_impl_.x_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.z_) -
        reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.z_));
  }
  ::memset(&_impl_.qx_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.qw_) -
      reinterpret_cast<char*>(&_impl_.qx_)) + sizeof(_impl_.qw_));
  _impl_.data_source_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Position::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 0, 2> Position::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Position, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Position_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 tracker_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Position, _impl_.tracker_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.tracker_id_)}},
    // optional float x = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 0, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.x_)}},
    // optional float y = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 1, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.y_)}},
    // optional float z = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 2, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.z_)}},
    // float qx = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.qx_)}},
    // float qy = 6;
    {::_pbi::TcParser::FastF32S1,
     {53, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.qy_)}},
    // float qz = 7;
    {::_pbi::TcParser::FastF32S1,
     {61, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.qz_)}},
    // float qw = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 63, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.qw_)}},
    // optional .messages.Position.DataSource data_source = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Position, _impl_.data_source_), 3>(),
     {72, 3, 0, PROTOBUF_FIELD_OFFSET(Position, _impl_.data_source_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 tracker_id = 1;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.tracker_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // optional float x = 2;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.x_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float y = 3;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.y_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // optional float z = 4;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.z_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kFloat)},
    // float qx = 5;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.qx_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float qy = 6;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.qy_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float qz = 7;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.qz_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float qw = 8;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.qw_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // optional .messages.Position.DataSource data_source = 9;
    {PROTOBUF_FIELD_OFFSET(Position, _impl_.data_source_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Position::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.Position)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 tracker_id = 1;
  if (this->_internal_tracker_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_tracker_id(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional float x = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_x(), target);
  }

  // optional float y = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_y(), target);
  }

  // optional float z = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        4, this->_internal_z(), target);
  }

  // float qx = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_qx = this->_internal_qx();
  ::uint32_t raw_qx;
  memcpy(&raw_qx, &tmp_qx, sizeof(tmp_qx));
  if (raw_qx != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        5, this->_internal_qx(), target);
  }

  // float qy = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_qy = this->_internal_qy();
  ::uint32_t raw_qy;
  memcpy(&raw_qy, &tmp_qy, sizeof(tmp_qy));
  if (raw_qy != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        6, this->_internal_qy(), target);
  }

  // float qz = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_qz = this->_internal_qz();
  ::uint32_t raw_qz;
  memcpy(&raw_qz, &tmp_qz, sizeof(tmp_qz));
  if (raw_qz != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        7, this->_internal_qz(), target);
  }

  // float qw = 8;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_qw = this->_internal_qw();
  ::uint32_t raw_qw;
  memcpy(&raw_qw, &tmp_qw, sizeof(tmp_qw));
  if (raw_qw != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        8, this->_internal_qw(), target);
  }

  // optional .messages.Position.DataSource data_source = 9;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        9, this->_internal_data_source(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.Position)
  return target;
}

::size_t Position::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.Position)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 tracker_id = 1;
  if (this->_internal_tracker_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_tracker_id());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional float x = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 5;
    }

    // optional float y = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 5;
    }

    // optional float z = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 5;
    }

  }
  // float qx = 5;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_qx = this->_internal_qx();
  ::uint32_t raw_qx;
  memcpy(&raw_qx, &tmp_qx, sizeof(tmp_qx));
  if (raw_qx != 0) {
    total_size += 5;
  }

  // float qy = 6;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_qy = this->_internal_qy();
  ::uint32_t raw_qy;
  memcpy(&raw_qy, &tmp_qy, sizeof(tmp_qy));
  if (raw_qy != 0) {
    total_size += 5;
  }

  // float qz = 7;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_qz = this->_internal_qz();
  ::uint32_t raw_qz;
  memcpy(&raw_qz, &tmp_qz, sizeof(tmp_qz));
  if (raw_qz != 0) {
    total_size += 5;
  }

  // float qw = 8;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_qw = this->_internal_qw();
  ::uint32_t raw_qw;
  memcpy(&raw_qw, &tmp_qw, sizeof(tmp_qw));
  if (raw_qw != 0) {
    total_size += 5;
  }

  // optional .messages.Position.DataSource data_source = 9;
  if (cached_has_bits & 0x00000008u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_data_source());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Position::_class_data_ = {
    Position::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Position::GetClassData() const {
  return &_class_data_;
}

void Position::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Position*>(&to_msg);
  auto& from = static_cast<const Position&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:messages.Position)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_tracker_id() != 0) {
    _this->_internal_set_tracker_id(from._internal_tracker_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.x_ = from._impl_.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.y_ = from._impl_.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.z_ = from._impl_.z_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_qx = from._internal_qx();
  ::uint32_t raw_qx;
  memcpy(&raw_qx, &tmp_qx, sizeof(tmp_qx));
  if (raw_qx != 0) {
    _this->_internal_set_qx(from._internal_qx());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_qy = from._internal_qy();
  ::uint32_t raw_qy;
  memcpy(&raw_qy, &tmp_qy, sizeof(tmp_qy));
  if (raw_qy != 0) {
    _this->_internal_set_qy(from._internal_qy());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_qz = from._internal_qz();
  ::uint32_t raw_qz;
  memcpy(&raw_qz, &tmp_qz, sizeof(tmp_qz));
  if (raw_qz != 0) {
    _this->_internal_set_qz(from._internal_qz());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_qw = from._internal_qw();
  ::uint32_t raw_qw;
  memcpy(&raw_qw, &tmp_qw, sizeof(tmp_qw));
  if (raw_qw != 0) {
    _this->_internal_set_qw(from._internal_qw());
  }
  if (cached_has_bits & 0x00000008u) {
    _this->_internal_set_data_source(from._internal_data_source());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Position::CopyFrom(const Position& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.Position)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Position::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Position::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Position::InternalSwap(Position* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Position, _impl_.data_source_)
      + sizeof(Position::_impl_.data_source_)
      - PROTOBUF_FIELD_OFFSET(Position, _impl_.tracker_id_)>(
          reinterpret_cast<char*>(&_impl_.tracker_id_),
          reinterpret_cast<char*>(&other->_impl_.tracker_id_));
}

::google::protobuf::Metadata Position::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ProtobufMessages_2eproto_getter, &descriptor_table_ProtobufMessages_2eproto_once,
      file_level_metadata_ProtobufMessages_2eproto[1]);
}
// ===================================================================

UserAction_ActionArgumentsEntry_DoNotUse::UserAction_ActionArgumentsEntry_DoNotUse() {}
UserAction_ActionArgumentsEntry_DoNotUse::UserAction_ActionArgumentsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata UserAction_ActionArgumentsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ProtobufMessages_2eproto_getter, &descriptor_table_ProtobufMessages_2eproto_once,
      file_level_metadata_ProtobufMessages_2eproto[2]);
}
// ===================================================================

class UserAction::_Internal {
 public:
};

UserAction::UserAction(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.UserAction)
}
inline PROTOBUF_NDEBUG_INLINE UserAction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : action_arguments_{visibility, arena, from.action_arguments_},
        name_(arena, from.name_),
        _cached_size_{0} {}

UserAction::UserAction(
    ::google::protobuf::Arena* arena,
    const UserAction& from)
    : ::google::protobuf::Message(arena) {
  UserAction* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:messages.UserAction)
}
inline PROTOBUF_NDEBUG_INLINE UserAction::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : action_arguments_{visibility, arena},
        name_(arena),
        _cached_size_{0} {}

inline void UserAction::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UserAction::~UserAction() {
  // @@protoc_insertion_point(destructor:messages.UserAction)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UserAction::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void UserAction::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.UserAction)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.action_arguments_.Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UserAction::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 1, 48, 2> UserAction::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_UserAction_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UserAction, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(UserAction, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // map<string, string> action_arguments = 2;
    {PROTOBUF_FIELD_OFFSET(UserAction, _impl_.action_arguments_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(UserAction()._impl_.action_arguments_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\23\4\20\0\0\0\0\0"
    "messages.UserAction"
    "name"
    "action_arguments"
  }},
};

::uint8_t* UserAction::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.UserAction)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "messages.UserAction.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // map<string, string> action_arguments = 2;
  if (!_internal_action_arguments().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_action_arguments();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "messages.UserAction.action_arguments");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "messages.UserAction.action_arguments");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            2, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "messages.UserAction.action_arguments");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "messages.UserAction.action_arguments");
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.UserAction)
  return target;
}

::size_t UserAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.UserAction)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> action_arguments = 2;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_action_arguments_size());
  for (const auto& entry : _internal_action_arguments()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UserAction::_class_data_ = {
    UserAction::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* UserAction::GetClassData() const {
  return &_class_data_;
}

void UserAction::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UserAction*>(&to_msg);
  auto& from = static_cast<const UserAction&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:messages.UserAction)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.action_arguments_.MergeFrom(from._impl_.action_arguments_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UserAction::CopyFrom(const UserAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.UserAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UserAction::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* UserAction::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void UserAction::InternalSwap(UserAction* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.action_arguments_.InternalSwap(&other->_impl_.action_arguments_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
}

::google::protobuf::Metadata UserAction::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ProtobufMessages_2eproto_getter, &descriptor_table_ProtobufMessages_2eproto_once,
      file_level_metadata_ProtobufMessages_2eproto[3]);
}
// ===================================================================

class TrackerAdded::_Internal {
 public:
};

TrackerAdded::TrackerAdded(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.TrackerAdded)
}
inline PROTOBUF_NDEBUG_INLINE TrackerAdded::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : tracker_serial_(arena, from.tracker_serial_),
        tracker_name_(arena, from.tracker_name_),
        _cached_size_{0} {}

TrackerAdded::TrackerAdded(
    ::google::protobuf::Arena* arena,
    const TrackerAdded& from)
    : ::google::protobuf::Message(arena) {
  TrackerAdded* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tracker_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, tracker_id_),
           offsetof(Impl_, tracker_role_) -
               offsetof(Impl_, tracker_id_) +
               sizeof(Impl_::tracker_role_));

  // @@protoc_insertion_point(copy_constructor:messages.TrackerAdded)
}
inline PROTOBUF_NDEBUG_INLINE TrackerAdded::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tracker_serial_(arena),
        tracker_name_(arena),
        _cached_size_{0} {}

inline void TrackerAdded::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tracker_id_),
           0,
           offsetof(Impl_, tracker_role_) -
               offsetof(Impl_, tracker_id_) +
               sizeof(Impl_::tracker_role_));
}
TrackerAdded::~TrackerAdded() {
  // @@protoc_insertion_point(destructor:messages.TrackerAdded)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TrackerAdded::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.tracker_serial_.Destroy();
  _impl_.tracker_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TrackerAdded::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.TrackerAdded)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tracker_serial_.ClearToEmpty();
  _impl_.tracker_name_.ClearToEmpty();
  ::memset(&_impl_.tracker_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.tracker_role_) -
      reinterpret_cast<char*>(&_impl_.tracker_id_)) + sizeof(_impl_.tracker_role_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TrackerAdded::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 56, 2> TrackerAdded::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TrackerAdded_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 tracker_role = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TrackerAdded, _impl_.tracker_role_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(TrackerAdded, _impl_.tracker_role_)}},
    // int32 tracker_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TrackerAdded, _impl_.tracker_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TrackerAdded, _impl_.tracker_id_)}},
    // string tracker_serial = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TrackerAdded, _impl_.tracker_serial_)}},
    // string tracker_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TrackerAdded, _impl_.tracker_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 tracker_id = 1;
    {PROTOBUF_FIELD_OFFSET(TrackerAdded, _impl_.tracker_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string tracker_serial = 2;
    {PROTOBUF_FIELD_OFFSET(TrackerAdded, _impl_.tracker_serial_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string tracker_name = 3;
    {PROTOBUF_FIELD_OFFSET(TrackerAdded, _impl_.tracker_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 tracker_role = 4;
    {PROTOBUF_FIELD_OFFSET(TrackerAdded, _impl_.tracker_role_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\25\0\16\14\0\0\0\0"
    "messages.TrackerAdded"
    "tracker_serial"
    "tracker_name"
  }},
};

::uint8_t* TrackerAdded::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.TrackerAdded)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 tracker_id = 1;
  if (this->_internal_tracker_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_tracker_id(), target);
  }

  // string tracker_serial = 2;
  if (!this->_internal_tracker_serial().empty()) {
    const std::string& _s = this->_internal_tracker_serial();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "messages.TrackerAdded.tracker_serial");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string tracker_name = 3;
  if (!this->_internal_tracker_name().empty()) {
    const std::string& _s = this->_internal_tracker_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "messages.TrackerAdded.tracker_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // int32 tracker_role = 4;
  if (this->_internal_tracker_role() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_tracker_role(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.TrackerAdded)
  return target;
}

::size_t TrackerAdded::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.TrackerAdded)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string tracker_serial = 2;
  if (!this->_internal_tracker_serial().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_tracker_serial());
  }

  // string tracker_name = 3;
  if (!this->_internal_tracker_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_tracker_name());
  }

  // int32 tracker_id = 1;
  if (this->_internal_tracker_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_tracker_id());
  }

  // int32 tracker_role = 4;
  if (this->_internal_tracker_role() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_tracker_role());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TrackerAdded::_class_data_ = {
    TrackerAdded::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TrackerAdded::GetClassData() const {
  return &_class_data_;
}

void TrackerAdded::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TrackerAdded*>(&to_msg);
  auto& from = static_cast<const TrackerAdded&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:messages.TrackerAdded)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tracker_serial().empty()) {
    _this->_internal_set_tracker_serial(from._internal_tracker_serial());
  }
  if (!from._internal_tracker_name().empty()) {
    _this->_internal_set_tracker_name(from._internal_tracker_name());
  }
  if (from._internal_tracker_id() != 0) {
    _this->_internal_set_tracker_id(from._internal_tracker_id());
  }
  if (from._internal_tracker_role() != 0) {
    _this->_internal_set_tracker_role(from._internal_tracker_role());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TrackerAdded::CopyFrom(const TrackerAdded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.TrackerAdded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TrackerAdded::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TrackerAdded::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TrackerAdded::InternalSwap(TrackerAdded* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tracker_serial_, &other->_impl_.tracker_serial_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tracker_name_, &other->_impl_.tracker_name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TrackerAdded, _impl_.tracker_role_)
      + sizeof(TrackerAdded::_impl_.tracker_role_)
      - PROTOBUF_FIELD_OFFSET(TrackerAdded, _impl_.tracker_id_)>(
          reinterpret_cast<char*>(&_impl_.tracker_id_),
          reinterpret_cast<char*>(&other->_impl_.tracker_id_));
}

::google::protobuf::Metadata TrackerAdded::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ProtobufMessages_2eproto_getter, &descriptor_table_ProtobufMessages_2eproto_once,
      file_level_metadata_ProtobufMessages_2eproto[4]);
}
// ===================================================================

TrackerStatus_ExtraEntry_DoNotUse::TrackerStatus_ExtraEntry_DoNotUse() {}
TrackerStatus_ExtraEntry_DoNotUse::TrackerStatus_ExtraEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
::google::protobuf::Metadata TrackerStatus_ExtraEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ProtobufMessages_2eproto_getter, &descriptor_table_ProtobufMessages_2eproto_once,
      file_level_metadata_ProtobufMessages_2eproto[5]);
}
// ===================================================================

class TrackerStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<TrackerStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TrackerStatus, _impl_._has_bits_);
  static void set_has_confidence(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

TrackerStatus::TrackerStatus(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.TrackerStatus)
}
inline PROTOBUF_NDEBUG_INLINE TrackerStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        extra_{visibility, arena, from.extra_} {}

TrackerStatus::TrackerStatus(
    ::google::protobuf::Arena* arena,
    const TrackerStatus& from)
    : ::google::protobuf::Message(arena) {
  TrackerStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tracker_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, tracker_id_),
           offsetof(Impl_, confidence_) -
               offsetof(Impl_, tracker_id_) +
               sizeof(Impl_::confidence_));

  // @@protoc_insertion_point(copy_constructor:messages.TrackerStatus)
}
inline PROTOBUF_NDEBUG_INLINE TrackerStatus::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        extra_{visibility, arena} {}

inline void TrackerStatus::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tracker_id_),
           0,
           offsetof(Impl_, confidence_) -
               offsetof(Impl_, tracker_id_) +
               sizeof(Impl_::confidence_));
}
TrackerStatus::~TrackerStatus() {
  // @@protoc_insertion_point(destructor:messages.TrackerStatus)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TrackerStatus::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void TrackerStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.TrackerStatus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.extra_.Clear();
  ::memset(&_impl_.tracker_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.status_) -
      reinterpret_cast<char*>(&_impl_.tracker_id_)) + sizeof(_impl_.status_));
  _impl_.confidence_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TrackerStatus::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 36, 2> TrackerStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TrackerStatus, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_TrackerStatus_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .messages.TrackerStatus.Confidence confidence = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TrackerStatus, _impl_.confidence_), 0>(),
     {32, 0, 0, PROTOBUF_FIELD_OFFSET(TrackerStatus, _impl_.confidence_)}},
    // int32 tracker_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TrackerStatus, _impl_.tracker_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TrackerStatus, _impl_.tracker_id_)}},
    // .messages.TrackerStatus.Status status = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TrackerStatus, _impl_.status_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TrackerStatus, _impl_.status_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 tracker_id = 1;
    {PROTOBUF_FIELD_OFFSET(TrackerStatus, _impl_.tracker_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .messages.TrackerStatus.Status status = 2;
    {PROTOBUF_FIELD_OFFSET(TrackerStatus, _impl_.status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // map<string, string> extra = 3;
    {PROTOBUF_FIELD_OFFSET(TrackerStatus, _impl_.extra_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // optional .messages.TrackerStatus.Confidence confidence = 4;
    {PROTOBUF_FIELD_OFFSET(TrackerStatus, _impl_.confidence_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(TrackerStatus()._impl_.extra_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\26\0\0\5\0\0\0\0"
    "messages.TrackerStatus"
    "extra"
  }},
};

::uint8_t* TrackerStatus::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.TrackerStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 tracker_id = 1;
  if (this->_internal_tracker_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_tracker_id(), target);
  }

  // .messages.TrackerStatus.Status status = 2;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_status(), target);
  }

  // map<string, string> extra = 3;
  if (!_internal_extra().empty()) {
    using MapType = ::google::protobuf::Map<std::string, std::string>;
    using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>;
    const auto& field = _internal_extra();

    if (stream->IsSerializationDeterministic() && field.size() > 1) {
      for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "messages.TrackerStatus.extra");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "messages.TrackerStatus.extra");
      }
    } else {
      for (const auto& entry : field) {
        target = WireHelper::InternalSerialize(
            3, entry.first, entry.second, target, stream);
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "messages.TrackerStatus.extra");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "messages.TrackerStatus.extra");
      }
    }
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .messages.TrackerStatus.Confidence confidence = 4;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_confidence(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.TrackerStatus)
  return target;
}

::size_t TrackerStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.TrackerStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> extra = 3;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_extra_size());
  for (const auto& entry : _internal_extra()) {
    total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                   _pbi::WireFormatLite::TYPE_STRING,
                                   _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
  }
  // int32 tracker_id = 1;
  if (this->_internal_tracker_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_tracker_id());
  }

  // .messages.TrackerStatus.Status status = 2;
  if (this->_internal_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_status());
  }

  // optional .messages.TrackerStatus.Confidence confidence = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_confidence());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TrackerStatus::_class_data_ = {
    TrackerStatus::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* TrackerStatus::GetClassData() const {
  return &_class_data_;
}

void TrackerStatus::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TrackerStatus*>(&to_msg);
  auto& from = static_cast<const TrackerStatus&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:messages.TrackerStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.extra_.MergeFrom(from._impl_.extra_);
  if (from._internal_tracker_id() != 0) {
    _this->_internal_set_tracker_id(from._internal_tracker_id());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_confidence(from._internal_confidence());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TrackerStatus::CopyFrom(const TrackerStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.TrackerStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TrackerStatus::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* TrackerStatus::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void TrackerStatus::InternalSwap(TrackerStatus* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.extra_.InternalSwap(&other->_impl_.extra_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TrackerStatus, _impl_.confidence_)
      + sizeof(TrackerStatus::_impl_.confidence_)
      - PROTOBUF_FIELD_OFFSET(TrackerStatus, _impl_.tracker_id_)>(
          reinterpret_cast<char*>(&_impl_.tracker_id_),
          reinterpret_cast<char*>(&other->_impl_.tracker_id_));
}

::google::protobuf::Metadata TrackerStatus::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ProtobufMessages_2eproto_getter, &descriptor_table_ProtobufMessages_2eproto_once,
      file_level_metadata_ProtobufMessages_2eproto[6]);
}
// ===================================================================

class Battery::_Internal {
 public:
};

Battery::Battery(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.Battery)
}
Battery::Battery(
    ::google::protobuf::Arena* arena, const Battery& from)
    : Battery(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Battery::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Battery::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tracker_id_),
           0,
           offsetof(Impl_, is_charging_) -
               offsetof(Impl_, tracker_id_) +
               sizeof(Impl_::is_charging_));
}
Battery::~Battery() {
  // @@protoc_insertion_point(destructor:messages.Battery)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Battery::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Battery::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.Battery)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.tracker_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.is_charging_) -
      reinterpret_cast<char*>(&_impl_.tracker_id_)) + sizeof(_impl_.is_charging_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Battery::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> Battery::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Battery_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 tracker_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Battery, _impl_.tracker_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Battery, _impl_.tracker_id_)}},
    // float battery_level = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(Battery, _impl_.battery_level_)}},
    // bool is_charging = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Battery, _impl_.is_charging_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Battery, _impl_.is_charging_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 tracker_id = 1;
    {PROTOBUF_FIELD_OFFSET(Battery, _impl_.tracker_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // float battery_level = 2;
    {PROTOBUF_FIELD_OFFSET(Battery, _impl_.battery_level_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // bool is_charging = 3;
    {PROTOBUF_FIELD_OFFSET(Battery, _impl_.is_charging_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* Battery::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.Battery)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 tracker_id = 1;
  if (this->_internal_tracker_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_tracker_id(), target);
  }

  // float battery_level = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_battery_level = this->_internal_battery_level();
  ::uint32_t raw_battery_level;
  memcpy(&raw_battery_level, &tmp_battery_level, sizeof(tmp_battery_level));
  if (raw_battery_level != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_battery_level(), target);
  }

  // bool is_charging = 3;
  if (this->_internal_is_charging() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_is_charging(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.Battery)
  return target;
}

::size_t Battery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.Battery)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 tracker_id = 1;
  if (this->_internal_tracker_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_tracker_id());
  }

  // float battery_level = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_battery_level = this->_internal_battery_level();
  ::uint32_t raw_battery_level;
  memcpy(&raw_battery_level, &tmp_battery_level, sizeof(tmp_battery_level));
  if (raw_battery_level != 0) {
    total_size += 5;
  }

  // bool is_charging = 3;
  if (this->_internal_is_charging() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Battery::_class_data_ = {
    Battery::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Battery::GetClassData() const {
  return &_class_data_;
}

void Battery::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Battery*>(&to_msg);
  auto& from = static_cast<const Battery&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:messages.Battery)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_tracker_id() != 0) {
    _this->_internal_set_tracker_id(from._internal_tracker_id());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_battery_level = from._internal_battery_level();
  ::uint32_t raw_battery_level;
  memcpy(&raw_battery_level, &tmp_battery_level, sizeof(tmp_battery_level));
  if (raw_battery_level != 0) {
    _this->_internal_set_battery_level(from._internal_battery_level());
  }
  if (from._internal_is_charging() != 0) {
    _this->_internal_set_is_charging(from._internal_is_charging());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Battery::CopyFrom(const Battery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.Battery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Battery::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Battery::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Battery::InternalSwap(Battery* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Battery, _impl_.is_charging_)
      + sizeof(Battery::_impl_.is_charging_)
      - PROTOBUF_FIELD_OFFSET(Battery, _impl_.tracker_id_)>(
          reinterpret_cast<char*>(&_impl_.tracker_id_),
          reinterpret_cast<char*>(&other->_impl_.tracker_id_));
}

::google::protobuf::Metadata Battery::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ProtobufMessages_2eproto_getter, &descriptor_table_ProtobufMessages_2eproto_once,
      file_level_metadata_ProtobufMessages_2eproto[7]);
}
// ===================================================================

class ProtobufMessage::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::messages::ProtobufMessage, _impl_._oneof_case_);
  static const ::messages::Position& position(const ProtobufMessage* msg);
  static const ::messages::UserAction& user_action(const ProtobufMessage* msg);
  static const ::messages::TrackerAdded& tracker_added(const ProtobufMessage* msg);
  static const ::messages::TrackerStatus& tracker_status(const ProtobufMessage* msg);
  static const ::messages::Battery& battery(const ProtobufMessage* msg);
};

const ::messages::Position& ProtobufMessage::_Internal::position(const ProtobufMessage* msg) {
  return *msg->_impl_.message_.position_;
}
const ::messages::UserAction& ProtobufMessage::_Internal::user_action(const ProtobufMessage* msg) {
  return *msg->_impl_.message_.user_action_;
}
const ::messages::TrackerAdded& ProtobufMessage::_Internal::tracker_added(const ProtobufMessage* msg) {
  return *msg->_impl_.message_.tracker_added_;
}
const ::messages::TrackerStatus& ProtobufMessage::_Internal::tracker_status(const ProtobufMessage* msg) {
  return *msg->_impl_.message_.tracker_status_;
}
const ::messages::Battery& ProtobufMessage::_Internal::battery(const ProtobufMessage* msg) {
  return *msg->_impl_.message_.battery_;
}
void ProtobufMessage::set_allocated_position(::messages::Position* position) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (position) {
    ::google::protobuf::Arena* submessage_arena = position->GetArena();
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(message_arena, position, submessage_arena);
    }
    set_has_position();
    _impl_.message_.position_ = position;
  }
  // @@protoc_insertion_point(field_set_allocated:messages.ProtobufMessage.position)
}
void ProtobufMessage::set_allocated_user_action(::messages::UserAction* user_action) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (user_action) {
    ::google::protobuf::Arena* submessage_arena = user_action->GetArena();
    if (message_arena != submessage_arena) {
      user_action = ::google::protobuf::internal::GetOwnedMessage(message_arena, user_action, submessage_arena);
    }
    set_has_user_action();
    _impl_.message_.user_action_ = user_action;
  }
  // @@protoc_insertion_point(field_set_allocated:messages.ProtobufMessage.user_action)
}
void ProtobufMessage::set_allocated_tracker_added(::messages::TrackerAdded* tracker_added) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (tracker_added) {
    ::google::protobuf::Arena* submessage_arena = tracker_added->GetArena();
    if (message_arena != submessage_arena) {
      tracker_added = ::google::protobuf::internal::GetOwnedMessage(message_arena, tracker_added, submessage_arena);
    }
    set_has_tracker_added();
    _impl_.message_.tracker_added_ = tracker_added;
  }
  // @@protoc_insertion_point(field_set_allocated:messages.ProtobufMessage.tracker_added)
}
void ProtobufMessage::set_allocated_tracker_status(::messages::TrackerStatus* tracker_status) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (tracker_status) {
    ::google::protobuf::Arena* submessage_arena = tracker_status->GetArena();
    if (message_arena != submessage_arena) {
      tracker_status = ::google::protobuf::internal::GetOwnedMessage(message_arena, tracker_status, submessage_arena);
    }
    set_has_tracker_status();
    _impl_.message_.tracker_status_ = tracker_status;
  }
  // @@protoc_insertion_point(field_set_allocated:messages.ProtobufMessage.tracker_status)
}
void ProtobufMessage::set_allocated_battery(::messages::Battery* battery) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_message();
  if (battery) {
    ::google::protobuf::Arena* submessage_arena = battery->GetArena();
    if (message_arena != submessage_arena) {
      battery = ::google::protobuf::internal::GetOwnedMessage(message_arena, battery, submessage_arena);
    }
    set_has_battery();
    _impl_.message_.battery_ = battery;
  }
  // @@protoc_insertion_point(field_set_allocated:messages.ProtobufMessage.battery)
}
ProtobufMessage::ProtobufMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:messages.ProtobufMessage)
}
inline PROTOBUF_NDEBUG_INLINE ProtobufMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : message_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

ProtobufMessage::ProtobufMessage(
    ::google::protobuf::Arena* arena,
    const ProtobufMessage& from)
    : ::google::protobuf::Message(arena) {
  ProtobufMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (message_case()) {
    case MESSAGE_NOT_SET:
      break;
      case kPosition:
        _impl_.message_.position_ = CreateMaybeMessage<::messages::Position>(arena, *from._impl_.message_.position_);
        break;
      case kUserAction:
        _impl_.message_.user_action_ = CreateMaybeMessage<::messages::UserAction>(arena, *from._impl_.message_.user_action_);
        break;
      case kTrackerAdded:
        _impl_.message_.tracker_added_ = CreateMaybeMessage<::messages::TrackerAdded>(arena, *from._impl_.message_.tracker_added_);
        break;
      case kTrackerStatus:
        _impl_.message_.tracker_status_ = CreateMaybeMessage<::messages::TrackerStatus>(arena, *from._impl_.message_.tracker_status_);
        break;
      case kBattery:
        _impl_.message_.battery_ = CreateMaybeMessage<::messages::Battery>(arena, *from._impl_.message_.battery_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:messages.ProtobufMessage)
}
inline PROTOBUF_NDEBUG_INLINE ProtobufMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : message_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void ProtobufMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ProtobufMessage::~ProtobufMessage() {
  // @@protoc_insertion_point(destructor:messages.ProtobufMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ProtobufMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_message()) {
    clear_message();
  }
  _impl_.~Impl_();
}

void ProtobufMessage::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:messages.ProtobufMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (message_case()) {
    case kPosition: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.position_;
      }
      break;
    }
    case kUserAction: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.user_action_;
      }
      break;
    }
    case kTrackerAdded: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.tracker_added_;
      }
      break;
    }
    case kTrackerStatus: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.tracker_status_;
      }
      break;
    }
    case kBattery: {
      if (GetArena() == nullptr) {
        delete _impl_.message_.battery_;
      }
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = MESSAGE_NOT_SET;
}


PROTOBUF_NOINLINE void ProtobufMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:messages.ProtobufMessage)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* ProtobufMessage::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 5, 5, 0, 2> ProtobufMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    5,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_ProtobufMessage_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .messages.Position position = 1;
    {PROTOBUF_FIELD_OFFSET(ProtobufMessage, _impl_.message_.position_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .messages.UserAction user_action = 2;
    {PROTOBUF_FIELD_OFFSET(ProtobufMessage, _impl_.message_.user_action_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .messages.TrackerAdded tracker_added = 3;
    {PROTOBUF_FIELD_OFFSET(ProtobufMessage, _impl_.message_.tracker_added_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .messages.TrackerStatus tracker_status = 4;
    {PROTOBUF_FIELD_OFFSET(ProtobufMessage, _impl_.message_.tracker_status_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .messages.Battery battery = 5;
    {PROTOBUF_FIELD_OFFSET(ProtobufMessage, _impl_.message_.battery_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::messages::Position>()},
    {::_pbi::TcParser::GetTable<::messages::UserAction>()},
    {::_pbi::TcParser::GetTable<::messages::TrackerAdded>()},
    {::_pbi::TcParser::GetTable<::messages::TrackerStatus>()},
    {::_pbi::TcParser::GetTable<::messages::Battery>()},
  }}, {{
  }},
};

::uint8_t* ProtobufMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messages.ProtobufMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (message_case()) {
    case kPosition: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::position(this),
          _Internal::position(this).GetCachedSize(), target, stream);
      break;
    }
    case kUserAction: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::user_action(this),
          _Internal::user_action(this).GetCachedSize(), target, stream);
      break;
    }
    case kTrackerAdded: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::tracker_added(this),
          _Internal::tracker_added(this).GetCachedSize(), target, stream);
      break;
    }
    case kTrackerStatus: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::tracker_status(this),
          _Internal::tracker_status(this).GetCachedSize(), target, stream);
      break;
    }
    case kBattery: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::battery(this),
          _Internal::battery(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messages.ProtobufMessage)
  return target;
}

::size_t ProtobufMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messages.ProtobufMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (message_case()) {
    // .messages.Position position = 1;
    case kPosition: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.message_.position_);
      break;
    }
    // .messages.UserAction user_action = 2;
    case kUserAction: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.message_.user_action_);
      break;
    }
    // .messages.TrackerAdded tracker_added = 3;
    case kTrackerAdded: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.message_.tracker_added_);
      break;
    }
    // .messages.TrackerStatus tracker_status = 4;
    case kTrackerStatus: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.message_.tracker_status_);
      break;
    }
    // .messages.Battery battery = 5;
    case kBattery: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.message_.battery_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData ProtobufMessage::_class_data_ = {
    ProtobufMessage::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* ProtobufMessage::GetClassData() const {
  return &_class_data_;
}

void ProtobufMessage::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<ProtobufMessage*>(&to_msg);
  auto& from = static_cast<const ProtobufMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:messages.ProtobufMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_case()) {
    case kPosition: {
      _this->_internal_mutable_position()->::messages::Position::MergeFrom(
          from._internal_position());
      break;
    }
    case kUserAction: {
      _this->_internal_mutable_user_action()->::messages::UserAction::MergeFrom(
          from._internal_user_action());
      break;
    }
    case kTrackerAdded: {
      _this->_internal_mutable_tracker_added()->::messages::TrackerAdded::MergeFrom(
          from._internal_tracker_added());
      break;
    }
    case kTrackerStatus: {
      _this->_internal_mutable_tracker_status()->::messages::TrackerStatus::MergeFrom(
          from._internal_tracker_status());
      break;
    }
    case kBattery: {
      _this->_internal_mutable_battery()->::messages::Battery::MergeFrom(
          from._internal_battery());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ProtobufMessage::CopyFrom(const ProtobufMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messages.ProtobufMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool ProtobufMessage::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* ProtobufMessage::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void ProtobufMessage::InternalSwap(ProtobufMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.message_, other->_impl_.message_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ProtobufMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_ProtobufMessages_2eproto_getter, &descriptor_table_ProtobufMessages_2eproto_once,
      file_level_metadata_ProtobufMessages_2eproto[8]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace messages
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
